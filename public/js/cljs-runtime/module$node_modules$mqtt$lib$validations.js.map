{
"version":3,
"file":"module$node_modules$mqtt$lib$validations.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,wCAAA,CAA6D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAkDrGD,MAAOC,CAAAA,OAAP,CAAiB,CACfC,eAbFA,QAAwB,CAACC,MAAD,CAAS,CAC/B,GAAsB,CAAtB,GAAIA,MAAOC,CAAAA,MAAX,CACE,MAAO,kBAET,KAAK,IAAIC,EAAI,CAAb,CAAgBA,CAAhB,CAAoBF,MAAOC,CAAAA,MAA3B,CAAmCC,CAAA,EAAnC,CAAwC,CA9BX,CAAA,CAAA,CACzBC,IAAAA,yBA8BiBH,MAAAI,CAAOF,CAAPE,CA9BHC,CAAAA,KAAN,CAAY,GAAZ,CAEZ,KAAK,IAAIH,WAAI,CAAb,CAAgBA,UAAhB,CAAoBC,wBAAMF,CAAAA,MAA1B,CAAkCC,UAAA,EAAlC,CACE,GAAiB,GAAjB,GAAIC,wBAAA,CAAMD,UAAN,CAAJ,CAAA,CAIA,GAAiB,GAAjB,GAAIC,wBAAA,CAAMD,UAAN,CAAJ,CAAsB,CAEpB,wBAAA,CAAOA,UAAP,GAAaC,wBAAMF,CAAAA,MAAnB;AAA4B,CAA5B,OAAA,CAFoB,CAKtB,GAA8B,CAAC,CAA/B,GAAIE,wBAAA,CAAMD,UAAN,CAASI,CAAAA,OAAT,CAAiB,GAAjB,CAAJ,EAA8D,CAAC,CAA/D,GAAoCH,wBAAA,CAAMD,UAAN,CAASI,CAAAA,OAAT,CAAiB,GAAjB,CAApC,CAAkE,CAChE,wBAAA,CAAO,CAAA,CAAP,OAAA,CADgE,CATlE,CAcF,wBAAA,CAAO,CAAA,CAlBsB,CA+B3B,GAAI,CAAC,wBAAL,CACE,MAAON,OAAA,CAAOE,CAAP,CAF6B,CAKxC,MAAO,KATwB,CAYhB,CAlDoF;",
"sources":["node_modules/mqtt/lib/validations.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mqtt$lib$validations\"] = function(global,require,module,exports) {\n'use strict'\r\n\r\n/**\r\n * Validate a topic to see if it's valid or not.\r\n * A topic is valid if it follow below rules:\r\n * - Rule #1: If any part of the topic is not `+` or `#`, then it must not contain `+` and '#'\r\n * - Rule #2: Part `#` must be located at the end of the mailbox\r\n *\r\n * @param {String} topic - A topic\r\n * @returns {Boolean} If the topic is valid, returns true. Otherwise, returns false.\r\n */\r\nfunction validateTopic (topic) {\r\n  var parts = topic.split('/')\r\n\r\n  for (var i = 0; i < parts.length; i++) {\r\n    if (parts[i] === '+') {\r\n      continue\r\n    }\r\n\r\n    if (parts[i] === '#') {\r\n      // for Rule #2\r\n      return i === parts.length - 1\r\n    }\r\n\r\n    if (parts[i].indexOf('+') !== -1 || parts[i].indexOf('#') !== -1) {\r\n      return false\r\n    }\r\n  }\r\n\r\n  return true\r\n}\r\n\r\n/**\r\n * Validate an array of topics to see if any of them is valid or not\r\n  * @param {Array} topics - Array of topics\r\n * @returns {String} If the topics is valid, returns null. Otherwise, returns the invalid one\r\n */\r\nfunction validateTopics (topics) {\r\n  if (topics.length === 0) {\r\n    return 'empty_topic_list'\r\n  }\r\n  for (var i = 0; i < topics.length; i++) {\r\n    if (!validateTopic(topics[i])) {\r\n      return topics[i]\r\n    }\r\n  }\r\n  return null\r\n}\r\n\r\nmodule.exports = {\r\n  validateTopics: validateTopics\r\n}\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","validateTopics","topics","length","i","parts","topic","split","indexOf"]
}
