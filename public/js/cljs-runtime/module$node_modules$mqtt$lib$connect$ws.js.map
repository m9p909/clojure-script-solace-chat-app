{
"version":3,
"file":"module$node_modules$mqtt$lib$connect$ws.js",
"lineCount":9,
"mappings":"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",
"sources":["node_modules/mqtt/lib/connect/ws.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mqtt$lib$connect$ws\"] = function(global,require,module,exports) {\nvar process = require('process');\nvar Buffer = require('buffer').Buffer;\n'use strict'\r\n\r\nconst WS = require('ws')\r\nconst debug = require('debug')('mqttjs:ws')\r\nconst duplexify = require('duplexify')\r\nconst Transform = require('readable-stream').Transform\r\n\r\nlet WSS_OPTIONS = [\r\n  'rejectUnauthorized',\r\n  'ca',\r\n  'cert',\r\n  'key',\r\n  'pfx',\r\n  'passphrase'\r\n]\r\n// eslint-disable-next-line camelcase\r\nconst IS_BROWSER = (typeof process !== 'undefined' && process.title === 'browser') || typeof __webpack_require__ === 'function'\r\nfunction buildUrl (opts, client) {\r\n  let url = opts.protocol + '://' + opts.hostname + ':' + opts.port + opts.path\r\n  if (typeof (opts.transformWsUrl) === 'function') {\r\n    url = opts.transformWsUrl(url, opts, client)\r\n  }\r\n  return url\r\n}\r\n\r\nfunction setDefaultOpts (opts) {\r\n  let options = opts\r\n  if (!opts.hostname) {\r\n    options.hostname = 'localhost'\r\n  }\r\n  if (!opts.port) {\r\n    if (opts.protocol === 'wss') {\r\n      options.port = 443\r\n    } else {\r\n      options.port = 80\r\n    }\r\n  }\r\n  if (!opts.path) {\r\n    options.path = '/'\r\n  }\r\n\r\n  if (!opts.wsOptions) {\r\n    options.wsOptions = {}\r\n  }\r\n  if (!IS_BROWSER && opts.protocol === 'wss') {\r\n    // Add cert/key/ca etc options\r\n    WSS_OPTIONS.forEach(function (prop) {\r\n      if (opts.hasOwnProperty(prop) && !opts.wsOptions.hasOwnProperty(prop)) {\r\n        options.wsOptions[prop] = opts[prop]\r\n      }\r\n    })\r\n  }\r\n\r\n  return options\r\n}\r\n\r\nfunction setDefaultBrowserOpts (opts) {\r\n  let options = setDefaultOpts(opts)\r\n\r\n  if (!options.hostname) {\r\n    options.hostname = options.host\r\n  }\r\n\r\n  if (!options.hostname) {\r\n    // Throwing an error in a Web Worker if no `hostname` is given, because we\r\n    // can not determine the `hostname` automatically.  If connecting to\r\n    // localhost, please supply the `hostname` as an argument.\r\n    if (typeof (document) === 'undefined') {\r\n      throw new Error('Could not determine host. Specify host manually.')\r\n    }\r\n    const parsed = new URL(document.URL)\r\n    options.hostname = parsed.hostname\r\n\r\n    if (!options.port) {\r\n      options.port = parsed.port\r\n    }\r\n  }\r\n\r\n  // objectMode should be defined for logic\r\n  if (options.objectMode === undefined) {\r\n    options.objectMode = !(options.binary === true || options.binary === undefined)\r\n  }\r\n\r\n  return options\r\n}\r\n\r\nfunction createWebSocket (client, url, opts) {\r\n  debug('createWebSocket')\r\n  debug('protocol: ' + opts.protocolId + ' ' + opts.protocolVersion)\r\n  const websocketSubProtocol =\r\n    (opts.protocolId === 'MQIsdp') && (opts.protocolVersion === 3)\r\n      ? 'mqttv3.1'\r\n      : 'mqtt'\r\n\r\n  debug('creating new Websocket for url: ' + url + ' and protocol: ' + websocketSubProtocol)\r\n  let socket = new WS(url, [websocketSubProtocol], opts.wsOptions)\r\n  return socket\r\n}\r\n\r\nfunction createBrowserWebSocket (client, opts) {\r\n  const websocketSubProtocol =\r\n  (opts.protocolId === 'MQIsdp') && (opts.protocolVersion === 3)\r\n    ? 'mqttv3.1'\r\n    : 'mqtt'\r\n\r\n  let url = buildUrl(opts, client)\r\n  /* global WebSocket */\r\n  let socket = new WebSocket(url, [websocketSubProtocol])\r\n  socket.binaryType = 'arraybuffer'\r\n  return socket\r\n}\r\n\r\nfunction streamBuilder (client, opts) {\r\n  debug('streamBuilder')\r\n  let options = setDefaultOpts(opts)\r\n  const url = buildUrl(options, client)\r\n  let socket = createWebSocket(client, url, options)\r\n  let webSocketStream = WS.createWebSocketStream(socket, options.wsOptions)\r\n  webSocketStream.url = url\r\n  socket.on('close', () => { webSocketStream.destroy() })\r\n  return webSocketStream\r\n}\r\n\r\nfunction browserStreamBuilder (client, opts) {\r\n  debug('browserStreamBuilder')\r\n  let stream\r\n  let options = setDefaultBrowserOpts(opts)\r\n  // sets the maximum socket buffer size before throttling\r\n  const bufferSize = options.browserBufferSize || 1024 * 512\r\n\r\n  const bufferTimeout = opts.browserBufferTimeout || 1000\r\n\r\n  const coerceToBuffer = !opts.objectMode\r\n\r\n  let socket = createBrowserWebSocket(client, opts)\r\n\r\n  let proxy = buildProxy(opts, socketWriteBrowser, socketEndBrowser)\r\n\r\n  if (!opts.objectMode) {\r\n    proxy._writev = writev\r\n  }\r\n  proxy.on('close', () => { socket.close() })\r\n\r\n  const eventListenerSupport = (typeof socket.addEventListener !== 'undefined')\r\n\r\n  // was already open when passed in\r\n  if (socket.readyState === socket.OPEN) {\r\n    stream = proxy\r\n  } else {\r\n    stream = stream = duplexify(undefined, undefined, opts)\r\n    if (!opts.objectMode) {\r\n      stream._writev = writev\r\n    }\r\n\r\n    if (eventListenerSupport) {\r\n      socket.addEventListener('open', onopen)\r\n    } else {\r\n      socket.onopen = onopen\r\n    }\r\n  }\r\n\r\n  stream.socket = socket\r\n\r\n  if (eventListenerSupport) {\r\n    socket.addEventListener('close', onclose)\r\n    socket.addEventListener('error', onerror)\r\n    socket.addEventListener('message', onmessage)\r\n  } else {\r\n    socket.onclose = onclose\r\n    socket.onerror = onerror\r\n    socket.onmessage = onmessage\r\n  }\r\n\r\n  // methods for browserStreamBuilder\r\n\r\n  function buildProxy (options, socketWrite, socketEnd) {\r\n    let proxy = new Transform({\r\n      objectModeMode: options.objectMode\r\n    })\r\n\r\n    proxy._write = socketWrite\r\n    proxy._flush = socketEnd\r\n\r\n    return proxy\r\n  }\r\n\r\n  function onopen () {\r\n    stream.setReadable(proxy)\r\n    stream.setWritable(proxy)\r\n    stream.emit('connect')\r\n  }\r\n\r\n  function onclose () {\r\n    stream.end()\r\n    stream.destroy()\r\n  }\r\n\r\n  function onerror (err) {\r\n    stream.destroy(err)\r\n  }\r\n\r\n  function onmessage (event) {\r\n    let data = event.data\r\n    if (data instanceof ArrayBuffer) data = Buffer.from(data)\r\n    else data = Buffer.from(data, 'utf8')\r\n    proxy.push(data)\r\n  }\r\n\r\n  // this is to be enabled only if objectMode is false\r\n  function writev (chunks, cb) {\r\n    const buffers = new Array(chunks.length)\r\n    for (let i = 0; i < chunks.length; i++) {\r\n      if (typeof chunks[i].chunk === 'string') {\r\n        buffers[i] = Buffer.from(chunks[i], 'utf8')\r\n      } else {\r\n        buffers[i] = chunks[i].chunk\r\n      }\r\n    }\r\n\r\n    this._write(Buffer.concat(buffers), 'binary', cb)\r\n  }\r\n\r\n  function socketWriteBrowser (chunk, enc, next) {\r\n    if (socket.bufferedAmount > bufferSize) {\r\n      // throttle data until buffered amount is reduced.\r\n      setTimeout(socketWriteBrowser, bufferTimeout, chunk, enc, next)\r\n    }\r\n\r\n    if (coerceToBuffer && typeof chunk === 'string') {\r\n      chunk = Buffer.from(chunk, 'utf8')\r\n    }\r\n\r\n    try {\r\n      socket.send(chunk)\r\n    } catch (err) {\r\n      return next(err)\r\n    }\r\n\r\n    next()\r\n  }\r\n\r\n  function socketEndBrowser (done) {\r\n    socket.close()\r\n    done()\r\n  }\r\n\r\n  // end methods for browserStreamBuilder\r\n\r\n  return stream\r\n}\r\n\r\nif (IS_BROWSER) {\r\n  module.exports = browserStreamBuilder\r\n} else {\r\n  module.exports = streamBuilder\r\n}\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","buildUrl","opts","client","url","protocol","hostname","port","path","transformWsUrl","setDefaultOpts","wsOptions","IS_BROWSER","WSS_OPTIONS","forEach","prop","hasOwnProperty","setDefaultBrowserOpts","options","host","document","Error","parsed","URL","undefined","objectMode","binary","createWebSocket","debug","protocolId","protocolVersion","websocketSubProtocol","socket","WS","createBrowserWebSocket","WebSocket","binaryType","streamBuilder","webSocketStream","createWebSocketStream","on","destroy","browserStreamBuilder","onopen","stream","setReadable","proxy","setWritable","emit","onclose","end","onerror","err","onmessage","event","data","ArrayBuffer","Buffer","from","push","writev","chunks","cb","buffers","Array","length","i","chunk","_write","concat","socketWriteBrowser","enc","next","bufferedAmount","bufferSize","setTimeout","bufferTimeout","coerceToBuffer","send","browserBufferSize","browserBufferTimeout","buildProxy","socketWrite","socketEnd","Transform","objectModeMode","_flush","socketEndBrowser","done","close","_writev","eventListenerSupport","addEventListener","readyState","OPEN","duplexify","process","title","__webpack_require__"]
}
