{
"version":3,
"file":"module$node_modules$mqtt_packet$generate.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,wCAAA,CAA6D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CACrG,IAAIC,OAASH,OAAA,CAAQ,kCAAR,CAAkBG,CAAAA,MAC/B,OAAMC,cAAgBJ,OAAA,CAAQ,+CAAR,CAChBK,OAAAA,CAAeL,OAAA,CAAQ,mCAAR,CAQrB,MAAMM,YAAN,QAA0BD,OAA1B,CACEE,WAAY,EAAG,CACb,KAAA,EACA,KAAKC,CAAAA,MAAL,CAAkBC,KAAJ,CAAU,EAAV,CACd,KAAKC,CAAAA,EAAL,CAAU,CAHG,CAMfC,KAAM,CAACC,KAAD,CAAQ,CACZ,IAAKJ,CAAAA,MAAL,CAAY,IAAKE,CAAAA,EAAL,EAAZ,CAAA,CAAyBE,KACzB,OAAO,CAAA,CAFK,CAKdC,MAAO,EAAG,CACR,IAAIC,OAAS,CACb,OAAMC,QAAcN,KAAJ,CAAU,IAAKD,CAAAA,MAAOM,CAAAA,MAAtB,CAAhB,CACME,KAAO,IAAKR,CAAAA,MAClB;IAAIS,IAAM,CAAV,CACIC,CAEJ,KAAKA,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgBF,IAAKF,CAAAA,MAArB,EAA2CK,IAAAA,EAA3C,GAA+BH,IAAA,CAAKE,CAAL,CAA/B,CAAsDA,CAAA,EAAtD,CACmCH,OAAA,CAAQG,CAAR,CAGjC,CAHuB,QAAvB,GAAI,MAAOF,KAAA,CAAKE,CAAL,CAAX,CAA8CF,IAAA,CAAKE,CAAL,CAAQJ,CAAAA,MAAtD,CACkBX,MAAOiB,CAAAA,UAAP,CAAkBJ,IAAA,CAAKE,CAAL,CAAlB,CAElB,CAAAJ,MAAA,EAAUC,OAAA,CAAQG,CAAR,CAGNG,OAAAA,CAASlB,MAAOmB,CAAAA,WAAP,CAAmBR,MAAnB,CAEf,KAAKI,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgBF,IAAKF,CAAAA,MAArB,EAA2CK,IAAAA,EAA3C,GAA+BH,IAAA,CAAKE,CAAL,CAA/B,CAAsDA,CAAA,EAAtD,CACyB,QAAvB,GAAI,MAAOF,KAAA,CAAKE,CAAL,CAAX,CACEF,IAAA,CAAKE,CAAL,CAAQK,CAAAA,IAAR,CAAaF,MAAb,CAAqBJ,GAArB,CADF,CAIEI,MAAOV,CAAAA,KAAP,CAAaK,IAAA,CAAKE,CAAL,CAAb,CAAsBD,GAAtB,CAFA,CAAAA,GAAA,EAAOF,OAAA,CAAQG,CAAR,CAOX,OAAOG,OA1BC,CAZZ,CA0CApB,MAAOC,CAAAA,OAAP,CAhDAsB,QAAkB,CAACC,MAAD,CAASC,IAAT,CAAe,CAC/B,MAAMC,OAAS,IAAIrB,WACnBF,cAAA,CAAcqB,MAAd,CAAsBE,MAAtB,CAA8BD,IAA9B,CACA,OAAOC,OAAOd,CAAAA,MAAP,EAHwB,CALoE;",
"sources":["node_modules/mqtt-packet/generate.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mqtt_packet$generate\"] = function(global,require,module,exports) {\nvar Buffer = require('buffer').Buffer;\nconst writeToStream = require('./writeToStream')\nconst EventEmitter = require('events')\n\nfunction generate (packet, opts) {\n  const stream = new Accumulator()\n  writeToStream(packet, stream, opts)\n  return stream.concat()\n}\n\nclass Accumulator extends EventEmitter {\n  constructor () {\n    super()\n    this._array = new Array(20)\n    this._i = 0\n  }\n\n  write (chunk) {\n    this._array[this._i++] = chunk\n    return true\n  }\n\n  concat () {\n    let length = 0\n    const lengths = new Array(this._array.length)\n    const list = this._array\n    let pos = 0\n    let i\n\n    for (i = 0; i < list.length && list[i] !== undefined; i++) {\n      if (typeof list[i] !== 'string') lengths[i] = list[i].length\n      else lengths[i] = Buffer.byteLength(list[i])\n\n      length += lengths[i]\n    }\n\n    const result = Buffer.allocUnsafe(length)\n\n    for (i = 0; i < list.length && list[i] !== undefined; i++) {\n      if (typeof list[i] !== 'string') {\n        list[i].copy(result, pos)\n        pos += lengths[i]\n      } else {\n        result.write(list[i], pos)\n        pos += lengths[i]\n      }\n    }\n\n    return result\n  }\n}\n\nmodule.exports = generate\n\n};"],
"names":["shadow$provide","global","require","module","exports","Buffer","writeToStream","EventEmitter","Accumulator","constructor","_array","Array","_i","write","chunk","concat","length","lengths","list","pos","i","undefined","byteLength","result","allocUnsafe","copy","generate","packet","opts","stream"]
}
