{
"version":3,
"file":"module$node_modules$mqtt$lib$connect$ali.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/mqtt/lib/connect/ali.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mqtt$lib$connect$ali\"] = function(global,require,module,exports) {\nvar Buffer = require('buffer').Buffer;\n'use strict'\r\n\r\nvar Transform = require('readable-stream').Transform\r\nvar duplexify = require('duplexify')\r\n\r\n/* global FileReader */\r\nvar my\r\nvar proxy\r\nvar stream\r\nvar isInitialized = false\r\n\r\nfunction buildProxy () {\r\n  var proxy = new Transform()\r\n  proxy._write = function (chunk, encoding, next) {\r\n    my.sendSocketMessage({\r\n      data: chunk.buffer,\r\n      success: function () {\r\n        next()\r\n      },\r\n      fail: function () {\r\n        next(new Error())\r\n      }\r\n    })\r\n  }\r\n  proxy._flush = function socketEnd (done) {\r\n    my.closeSocket({\r\n      success: function () {\r\n        done()\r\n      }\r\n    })\r\n  }\r\n\r\n  return proxy\r\n}\r\n\r\nfunction setDefaultOpts (opts) {\r\n  if (!opts.hostname) {\r\n    opts.hostname = 'localhost'\r\n  }\r\n  if (!opts.path) {\r\n    opts.path = '/'\r\n  }\r\n\r\n  if (!opts.wsOptions) {\r\n    opts.wsOptions = {}\r\n  }\r\n}\r\n\r\nfunction buildUrl (opts, client) {\r\n  var protocol = opts.protocol === 'alis' ? 'wss' : 'ws'\r\n  var url = protocol + '://' + opts.hostname + opts.path\r\n  if (opts.port && opts.port !== 80 && opts.port !== 443) {\r\n    url = protocol + '://' + opts.hostname + ':' + opts.port + opts.path\r\n  }\r\n  if (typeof (opts.transformWsUrl) === 'function') {\r\n    url = opts.transformWsUrl(url, opts, client)\r\n  }\r\n  return url\r\n}\r\n\r\nfunction bindEventHandler () {\r\n  if (isInitialized) return\r\n\r\n  isInitialized = true\r\n\r\n  my.onSocketOpen(function () {\r\n    stream.setReadable(proxy)\r\n    stream.setWritable(proxy)\r\n    stream.emit('connect')\r\n  })\r\n\r\n  my.onSocketMessage(function (res) {\r\n    if (typeof res.data === 'string') {\r\n      var buffer = Buffer.from(res.data, 'base64')\r\n      proxy.push(buffer)\r\n    } else {\r\n      var reader = new FileReader()\r\n      reader.addEventListener('load', function () {\r\n        var data = reader.result\r\n\r\n        if (data instanceof ArrayBuffer) data = Buffer.from(data)\r\n        else data = Buffer.from(data, 'utf8')\r\n        proxy.push(data)\r\n      })\r\n      reader.readAsArrayBuffer(res.data)\r\n    }\r\n  })\r\n\r\n  my.onSocketClose(function () {\r\n    stream.end()\r\n    stream.destroy()\r\n  })\r\n\r\n  my.onSocketError(function (res) {\r\n    stream.destroy(res)\r\n  })\r\n}\r\n\r\nfunction buildStream (client, opts) {\r\n  opts.hostname = opts.hostname || opts.host\r\n\r\n  if (!opts.hostname) {\r\n    throw new Error('Could not determine host. Specify host manually.')\r\n  }\r\n\r\n  var websocketSubProtocol =\r\n    (opts.protocolId === 'MQIsdp') && (opts.protocolVersion === 3)\r\n      ? 'mqttv3.1'\r\n      : 'mqtt'\r\n\r\n  setDefaultOpts(opts)\r\n\r\n  var url = buildUrl(opts, client)\r\n  my = opts.my\r\n  my.connectSocket({\r\n    url: url,\r\n    protocols: websocketSubProtocol\r\n  })\r\n\r\n  proxy = buildProxy()\r\n  stream = duplexify.obj()\r\n\r\n  bindEventHandler()\r\n\r\n  return stream\r\n}\r\n\r\nmodule.exports = buildStream\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","buildProxy","proxy","Transform","_write","proxy._write","chunk","encoding","next","my","sendSocketMessage","data","buffer","success","fail","Error","_flush","proxy._flush","done","closeSocket","bindEventHandler","isInitialized","onSocketOpen","stream","setReadable","setWritable","emit","onSocketMessage","res","Buffer","from","push","reader","FileReader","addEventListener","result","ArrayBuffer","readAsArrayBuffer","onSocketClose","end","destroy","onSocketError","duplexify","buildStream","client","opts","hostname","host","websocketSubProtocol","protocolId","protocolVersion","path","wsOptions","protocol","url","port","transformWsUrl","connectSocket","protocols","obj"]
}
