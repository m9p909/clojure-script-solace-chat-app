{
"version":3,
"file":"module$node_modules$mqtt_packet$parser.js",
"lineCount":28,
"mappings":"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",
"sources":["node_modules/mqtt-packet/parser.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mqtt_packet$parser\"] = function(global,require,module,exports) {\nconst bl = require('bl')\nconst EventEmitter = require('events')\nconst Packet = require('./packet')\nconst constants = require('./constants')\nconst debug = require('debug')('mqtt-packet:parser')\n\nclass Parser extends EventEmitter {\n  constructor () {\n    super()\n    this.parser = this.constructor.parser\n  }\n\n  static parser (opt) {\n    if (!(this instanceof Parser)) return (new Parser()).parser(opt)\n\n    this.settings = opt || {}\n\n    this._states = [\n      '_parseHeader',\n      '_parseLength',\n      '_parsePayload',\n      '_newPacket'\n    ]\n\n    this._resetState()\n    return this\n  }\n\n  _resetState () {\n    debug('_resetState: resetting packet, error, _list, and _stateCounter')\n    this.packet = new Packet()\n    this.error = null\n    this._list = bl()\n    this._stateCounter = 0\n  }\n\n  parse (buf) {\n    if (this.error) this._resetState()\n\n    this._list.append(buf)\n    debug('parse: current state: %s', this._states[this._stateCounter])\n    while ((this.packet.length !== -1 || this._list.length > 0) &&\n      this[this._states[this._stateCounter]]() &&\n      !this.error) {\n      this._stateCounter++\n      debug('parse: state complete. _stateCounter is now: %d', this._stateCounter)\n      debug('parse: packet.length: %d, buffer list length: %d', this.packet.length, this._list.length)\n      if (this._stateCounter >= this._states.length) this._stateCounter = 0\n    }\n    debug('parse: exited while loop. packet: %d, buffer list length: %d', this.packet.length, this._list.length)\n    return this._list.length\n  }\n\n  _parseHeader () {\n    // There is at least one byte in the buffer\n    const zero = this._list.readUInt8(0)\n    this.packet.cmd = constants.types[zero >> constants.CMD_SHIFT]\n    this.packet.retain = (zero & constants.RETAIN_MASK) !== 0\n    this.packet.qos = (zero >> constants.QOS_SHIFT) & constants.QOS_MASK\n    this.packet.dup = (zero & constants.DUP_MASK) !== 0\n    debug('_parseHeader: packet: %o', this.packet)\n\n    this._list.consume(1)\n\n    return true\n  }\n\n  _parseLength () {\n    // There is at least one byte in the list\n    const result = this._parseVarByteNum(true)\n\n    if (result) {\n      this.packet.length = result.value\n      this._list.consume(result.bytes)\n    }\n    debug('_parseLength %d', result.value)\n    return !!result\n  }\n\n  _parsePayload () {\n    debug('_parsePayload: payload %O', this._list)\n    let result = false\n\n    // Do we have a payload? Do we have enough data to complete the payload?\n    // PINGs have no payload\n    if (this.packet.length === 0 || this._list.length >= this.packet.length) {\n      this._pos = 0\n\n      switch (this.packet.cmd) {\n        case 'connect':\n          this._parseConnect()\n          break\n        case 'connack':\n          this._parseConnack()\n          break\n        case 'publish':\n          this._parsePublish()\n          break\n        case 'puback':\n        case 'pubrec':\n        case 'pubrel':\n        case 'pubcomp':\n          this._parseConfirmation()\n          break\n        case 'subscribe':\n          this._parseSubscribe()\n          break\n        case 'suback':\n          this._parseSuback()\n          break\n        case 'unsubscribe':\n          this._parseUnsubscribe()\n          break\n        case 'unsuback':\n          this._parseUnsuback()\n          break\n        case 'pingreq':\n        case 'pingresp':\n          // These are empty, nothing to do\n          break\n        case 'disconnect':\n          this._parseDisconnect()\n          break\n        case 'auth':\n          this._parseAuth()\n          break\n        default:\n          this._emitError(new Error('Not supported'))\n      }\n\n      result = true\n    }\n    debug('_parsePayload complete result: %s', result)\n    return result\n  }\n\n  _parseConnect () {\n    debug('_parseConnect')\n    let topic // Will topic\n    let payload // Will payload\n    let password // Password\n    let username // Username\n    const flags = {}\n    const packet = this.packet\n\n    // Parse protocolId\n    const protocolId = this._parseString()\n\n    if (protocolId === null) return this._emitError(new Error('Cannot parse protocolId'))\n    if (protocolId !== 'MQTT' && protocolId !== 'MQIsdp') {\n      return this._emitError(new Error('Invalid protocolId'))\n    }\n\n    packet.protocolId = protocolId\n\n    // Parse constants version number\n    if (this._pos >= this._list.length) return this._emitError(new Error('Packet too short'))\n\n    packet.protocolVersion = this._list.readUInt8(this._pos)\n\n    if (packet.protocolVersion >= 128) {\n      packet.bridgeMode = true\n      packet.protocolVersion = packet.protocolVersion - 128\n    }\n\n    if (packet.protocolVersion !== 3 && packet.protocolVersion !== 4 && packet.protocolVersion !== 5) {\n      return this._emitError(new Error('Invalid protocol version'))\n    }\n\n    this._pos++\n\n    if (this._pos >= this._list.length) {\n      return this._emitError(new Error('Packet too short'))\n    }\n\n    // Parse connect flags\n    flags.username = (this._list.readUInt8(this._pos) & constants.USERNAME_MASK)\n    flags.password = (this._list.readUInt8(this._pos) & constants.PASSWORD_MASK)\n    flags.will = (this._list.readUInt8(this._pos) & constants.WILL_FLAG_MASK)\n\n    if (flags.will) {\n      packet.will = {}\n      packet.will.retain = (this._list.readUInt8(this._pos) & constants.WILL_RETAIN_MASK) !== 0\n      packet.will.qos = (this._list.readUInt8(this._pos) &\n        constants.WILL_QOS_MASK) >> constants.WILL_QOS_SHIFT\n    }\n\n    packet.clean = (this._list.readUInt8(this._pos) & constants.CLEAN_SESSION_MASK) !== 0\n    this._pos++\n\n    // Parse keepalive\n    packet.keepalive = this._parseNum()\n    if (packet.keepalive === -1) return this._emitError(new Error('Packet too short'))\n\n    // parse properties\n    if (packet.protocolVersion === 5) {\n      const properties = this._parseProperties()\n      if (Object.getOwnPropertyNames(properties).length) {\n        packet.properties = properties\n      }\n    }\n    // Parse clientId\n    const clientId = this._parseString()\n    if (clientId === null) return this._emitError(new Error('Packet too short'))\n    packet.clientId = clientId\n    debug('_parseConnect: packet.clientId: %s', packet.clientId)\n\n    if (flags.will) {\n      if (packet.protocolVersion === 5) {\n        const willProperties = this._parseProperties()\n        if (Object.getOwnPropertyNames(willProperties).length) {\n          packet.will.properties = willProperties\n        }\n      }\n      // Parse will topic\n      topic = this._parseString()\n      if (topic === null) return this._emitError(new Error('Cannot parse will topic'))\n      packet.will.topic = topic\n      debug('_parseConnect: packet.will.topic: %s', packet.will.topic)\n\n      // Parse will payload\n      payload = this._parseBuffer()\n      if (payload === null) return this._emitError(new Error('Cannot parse will payload'))\n      packet.will.payload = payload\n      debug('_parseConnect: packet.will.paylaod: %s', packet.will.payload)\n    }\n\n    // Parse username\n    if (flags.username) {\n      username = this._parseString()\n      if (username === null) return this._emitError(new Error('Cannot parse username'))\n      packet.username = username\n      debug('_parseConnect: packet.username: %s', packet.username)\n    }\n\n    // Parse password\n    if (flags.password) {\n      password = this._parseBuffer()\n      if (password === null) return this._emitError(new Error('Cannot parse password'))\n      packet.password = password\n    }\n    // need for right parse auth packet and self set up\n    this.settings = packet\n    debug('_parseConnect: complete')\n    return packet\n  }\n\n  _parseConnack () {\n    debug('_parseConnack')\n    const packet = this.packet\n\n    if (this._list.length < 1) return null\n    packet.sessionPresent = !!(this._list.readUInt8(this._pos++) & constants.SESSIONPRESENT_MASK)\n\n    if (this.settings.protocolVersion === 5) {\n      if (this._list.length >= 2) {\n        packet.reasonCode = this._list.readUInt8(this._pos++)\n      } else {\n        packet.reasonCode = 0\n      }\n    } else {\n      if (this._list.length < 2) return null\n      packet.returnCode = this._list.readUInt8(this._pos++)\n    }\n\n    if (packet.returnCode === -1 || packet.reasonCode === -1) return this._emitError(new Error('Cannot parse return code'))\n    // mqtt 5 properties\n    if (this.settings.protocolVersion === 5) {\n      const properties = this._parseProperties()\n      if (Object.getOwnPropertyNames(properties).length) {\n        packet.properties = properties\n      }\n    }\n    debug('_parseConnack: complete')\n  }\n\n  _parsePublish () {\n    debug('_parsePublish')\n    const packet = this.packet\n    packet.topic = this._parseString()\n\n    if (packet.topic === null) return this._emitError(new Error('Cannot parse topic'))\n\n    // Parse messageId\n    if (packet.qos > 0) if (!this._parseMessageId()) { return }\n\n    // Properties mqtt 5\n    if (this.settings.protocolVersion === 5) {\n      const properties = this._parseProperties()\n      if (Object.getOwnPropertyNames(properties).length) {\n        packet.properties = properties\n      }\n    }\n\n    packet.payload = this._list.slice(this._pos, packet.length)\n    debug('_parsePublish: payload from buffer list: %o', packet.payload)\n  }\n\n  _parseSubscribe () {\n    debug('_parseSubscribe')\n    const packet = this.packet\n    let topic\n    let options\n    let qos\n    let rh\n    let rap\n    let nl\n    let subscription\n\n    if (packet.qos !== 1) {\n      return this._emitError(new Error('Wrong subscribe header'))\n    }\n\n    packet.subscriptions = []\n\n    if (!this._parseMessageId()) { return }\n\n    // Properties mqtt 5\n    if (this.settings.protocolVersion === 5) {\n      const properties = this._parseProperties()\n      if (Object.getOwnPropertyNames(properties).length) {\n        packet.properties = properties\n      }\n    }\n\n    while (this._pos < packet.length) {\n      // Parse topic\n      topic = this._parseString()\n      if (topic === null) return this._emitError(new Error('Cannot parse topic'))\n      if (this._pos >= packet.length) return this._emitError(new Error('Malformed Subscribe Payload'))\n\n      options = this._parseByte()\n      qos = options & constants.SUBSCRIBE_OPTIONS_QOS_MASK\n      nl = ((options >> constants.SUBSCRIBE_OPTIONS_NL_SHIFT) & constants.SUBSCRIBE_OPTIONS_NL_MASK) !== 0\n      rap = ((options >> constants.SUBSCRIBE_OPTIONS_RAP_SHIFT) & constants.SUBSCRIBE_OPTIONS_RAP_MASK) !== 0\n      rh = (options >> constants.SUBSCRIBE_OPTIONS_RH_SHIFT) & constants.SUBSCRIBE_OPTIONS_RH_MASK\n\n      subscription = { topic, qos }\n\n      // mqtt 5 options\n      if (this.settings.protocolVersion === 5) {\n        subscription.nl = nl\n        subscription.rap = rap\n        subscription.rh = rh\n      } else if (this.settings.bridgeMode) {\n        subscription.rh = 0\n        subscription.rap = true\n        subscription.nl = true\n      }\n\n      // Push pair to subscriptions\n      debug('_parseSubscribe: push subscription `%s` to subscription', subscription)\n      packet.subscriptions.push(subscription)\n    }\n  }\n\n  _parseSuback () {\n    debug('_parseSuback')\n    const packet = this.packet\n    this.packet.granted = []\n\n    if (!this._parseMessageId()) { return }\n\n    // Properties mqtt 5\n    if (this.settings.protocolVersion === 5) {\n      const properties = this._parseProperties()\n      if (Object.getOwnPropertyNames(properties).length) {\n        packet.properties = properties\n      }\n    }\n\n    // Parse granted QoSes\n    while (this._pos < this.packet.length) {\n      this.packet.granted.push(this._list.readUInt8(this._pos++))\n    }\n  }\n\n  _parseUnsubscribe () {\n    debug('_parseUnsubscribe')\n    const packet = this.packet\n\n    packet.unsubscriptions = []\n\n    // Parse messageId\n    if (!this._parseMessageId()) { return }\n\n    // Properties mqtt 5\n    if (this.settings.protocolVersion === 5) {\n      const properties = this._parseProperties()\n      if (Object.getOwnPropertyNames(properties).length) {\n        packet.properties = properties\n      }\n    }\n\n    while (this._pos < packet.length) {\n      // Parse topic\n      const topic = this._parseString()\n      if (topic === null) return this._emitError(new Error('Cannot parse topic'))\n\n      // Push topic to unsubscriptions\n      debug('_parseUnsubscribe: push topic `%s` to unsubscriptions', topic)\n      packet.unsubscriptions.push(topic)\n    }\n  }\n\n  _parseUnsuback () {\n    debug('_parseUnsuback')\n    const packet = this.packet\n    if (!this._parseMessageId()) return this._emitError(new Error('Cannot parse messageId'))\n    // Properties mqtt 5\n    if (this.settings.protocolVersion === 5) {\n      const properties = this._parseProperties()\n      if (Object.getOwnPropertyNames(properties).length) {\n        packet.properties = properties\n      }\n      // Parse granted QoSes\n      packet.granted = []\n      while (this._pos < this.packet.length) {\n        this.packet.granted.push(this._list.readUInt8(this._pos++))\n      }\n    }\n  }\n\n  // parse packets like puback, pubrec, pubrel, pubcomp\n  _parseConfirmation () {\n    debug('_parseConfirmation: packet.cmd: `%s`', this.packet.cmd)\n    const packet = this.packet\n\n    this._parseMessageId()\n\n    if (this.settings.protocolVersion === 5) {\n      if (packet.length > 2) {\n        // response code\n        packet.reasonCode = this._parseByte()\n        debug('_parseConfirmation: packet.reasonCode `%d`', packet.reasonCode)\n      } else {\n        packet.reasonCode = 0\n      }\n\n      if (packet.length > 3) {\n        // properies mqtt 5\n        const properties = this._parseProperties()\n        if (Object.getOwnPropertyNames(properties).length) {\n          packet.properties = properties\n        }\n      }\n    }\n\n    return true\n  }\n\n  // parse disconnect packet\n  _parseDisconnect () {\n    const packet = this.packet\n    debug('_parseDisconnect')\n\n    if (this.settings.protocolVersion === 5) {\n      // response code\n      if (this._list.length > 0) {\n        packet.reasonCode = this._parseByte()\n      } else {\n        packet.reasonCode = 0\n      }\n      // properies mqtt 5\n      const properties = this._parseProperties()\n      if (Object.getOwnPropertyNames(properties).length) {\n        packet.properties = properties\n      }\n    }\n\n    debug('_parseDisconnect result: true')\n    return true\n  }\n\n  // parse auth packet\n  _parseAuth () {\n    debug('_parseAuth')\n    const packet = this.packet\n\n    if (this.settings.protocolVersion !== 5) {\n      return this._emitError(new Error('Not supported auth packet for this version MQTT'))\n    }\n\n    // response code\n    packet.reasonCode = this._parseByte()\n    // properies mqtt 5\n    const properties = this._parseProperties()\n    if (Object.getOwnPropertyNames(properties).length) {\n      packet.properties = properties\n    }\n\n    debug('_parseAuth: result: true')\n    return true\n  }\n\n  _parseMessageId () {\n    const packet = this.packet\n\n    packet.messageId = this._parseNum()\n\n    if (packet.messageId === null) {\n      this._emitError(new Error('Cannot parse messageId'))\n      return false\n    }\n\n    debug('_parseMessageId: packet.messageId %d', packet.messageId)\n    return true\n  }\n\n  _parseString (maybeBuffer) {\n    const length = this._parseNum()\n    const end = length + this._pos\n\n    if (length === -1 || end > this._list.length || end > this.packet.length) return null\n\n    const result = this._list.toString('utf8', this._pos, end)\n    this._pos += length\n    debug('_parseString: result: %s', result)\n    return result\n  }\n\n  _parseStringPair () {\n    debug('_parseStringPair')\n    return {\n      name: this._parseString(),\n      value: this._parseString()\n    }\n  }\n\n  _parseBuffer () {\n    const length = this._parseNum()\n    const end = length + this._pos\n\n    if (length === -1 || end > this._list.length || end > this.packet.length) return null\n\n    const result = this._list.slice(this._pos, end)\n\n    this._pos += length\n    debug('_parseBuffer: result: %o', result)\n    return result\n  }\n\n  _parseNum () {\n    if (this._list.length - this._pos < 2) return -1\n\n    const result = this._list.readUInt16BE(this._pos)\n    this._pos += 2\n    debug('_parseNum: result: %s', result)\n    return result\n  }\n\n  _parse4ByteNum () {\n    if (this._list.length - this._pos < 4) return -1\n\n    const result = this._list.readUInt32BE(this._pos)\n    this._pos += 4\n    debug('_parse4ByteNum: result: %s', result)\n    return result\n  }\n\n  _parseVarByteNum (fullInfoFlag) {\n    debug('_parseVarByteNum')\n    const maxBytes = 4\n    let bytes = 0\n    let mul = 1\n    let value = 0\n    let result = false\n    let current\n    const padding = this._pos ? this._pos : 0\n\n    while (bytes < maxBytes && (padding + bytes) < this._list.length) {\n      current = this._list.readUInt8(padding + bytes++)\n      value += mul * (current & constants.VARBYTEINT_MASK)\n      mul *= 0x80\n\n      if ((current & constants.VARBYTEINT_FIN_MASK) === 0) {\n        result = true\n        break\n      }\n      if (this._list.length <= bytes) {\n        break\n      }\n    }\n\n    if (!result && bytes === maxBytes && this._list.length >= bytes) {\n      this._emitError(new Error('Invalid variable byte integer'))\n    }\n\n    if (padding) {\n      this._pos += bytes\n    }\n\n    result = result\n      ? fullInfoFlag ? {\n        bytes,\n        value\n      } : value\n      : false\n\n    debug('_parseVarByteNum: result: %o', result)\n    return result\n  }\n\n  _parseByte () {\n    let result\n    if (this._pos < this._list.length) {\n      result = this._list.readUInt8(this._pos)\n      this._pos++\n    }\n    debug('_parseByte: result: %o', result)\n    return result\n  }\n\n  _parseByType (type) {\n    debug('_parseByType: type: %s', type)\n    switch (type) {\n      case 'byte': {\n        return this._parseByte() !== 0\n      }\n      case 'int8': {\n        return this._parseByte()\n      }\n      case 'int16': {\n        return this._parseNum()\n      }\n      case 'int32': {\n        return this._parse4ByteNum()\n      }\n      case 'var': {\n        return this._parseVarByteNum()\n      }\n      case 'string': {\n        return this._parseString()\n      }\n      case 'pair': {\n        return this._parseStringPair()\n      }\n      case 'binary': {\n        return this._parseBuffer()\n      }\n    }\n  }\n\n  _parseProperties () {\n    debug('_parseProperties')\n    const length = this._parseVarByteNum()\n    const start = this._pos\n    const end = start + length\n    const result = {}\n    while (this._pos < end) {\n      const type = this._parseByte()\n      if (!type) {\n        this._emitError(new Error('Cannot parse property code type'))\n        return false\n      }\n      const name = constants.propertiesCodes[type]\n      if (!name) {\n        this._emitError(new Error('Unknown property'))\n        return false\n      }\n      // user properties process\n      if (name === 'userProperties') {\n        if (!result[name]) {\n          result[name] = Object.create(null)\n        }\n        const currentUserProperty = this._parseByType(constants.propertiesTypes[name])\n        if (result[name][currentUserProperty.name]) {\n          if (Array.isArray(result[name][currentUserProperty.name])) {\n            result[name][currentUserProperty.name].push(currentUserProperty.value)\n          } else {\n            const currentValue = result[name][currentUserProperty.name]\n            result[name][currentUserProperty.name] = [currentValue]\n            result[name][currentUserProperty.name].push(currentUserProperty.value)\n          }\n        } else {\n          result[name][currentUserProperty.name] = currentUserProperty.value\n        }\n        continue\n      }\n      if (result[name]) {\n        if (Array.isArray(result[name])) {\n          result[name].push(this._parseByType(constants.propertiesTypes[name]))\n        } else {\n          result[name] = [result[name]]\n          result[name].push(this._parseByType(constants.propertiesTypes[name]))\n        }\n      } else {\n        result[name] = this._parseByType(constants.propertiesTypes[name])\n      }\n    }\n    return result\n  }\n\n  _newPacket () {\n    debug('_newPacket')\n    if (this.packet) {\n      this._list.consume(this.packet.length)\n      debug('_newPacket: parser emit packet: packet.cmd: %s, packet.payload: %s, packet.length: %d', this.packet.cmd, this.packet.payload, this.packet.length)\n      this.emit('packet', this.packet)\n    }\n    debug('_newPacket: new packet')\n    this.packet = new Packet()\n\n    this._pos = 0\n\n    return true\n  }\n\n  _emitError (err) {\n    debug('_emitError')\n    this.error = err\n    this.emit('error', err)\n  }\n}\n\nmodule.exports = Parser\n\n};"],
"names":["shadow$provide","global","require","module","exports","bl","EventEmitter","Packet","constants","debug","Parser","constructor","parser","opt","settings","_states","_resetState","packet","error","_list","_stateCounter","parse","buf","append","length","_parseHeader","zero","readUInt8","cmd","types","CMD_SHIFT","retain","RETAIN_MASK","qos","QOS_SHIFT","QOS_MASK","dup","DUP_MASK","consume","_parseLength","result","_parseVarByteNum","value","bytes","_parsePayload","_pos","_parseConnect","_parseConnack","_parsePublish","_parseConfirmation","_parseSubscribe","_parseSuback","_parseUnsubscribe","_parseUnsuback","_parseDisconnect","_parseAuth","_emitError","Error","topic","protocolId","_parseString","protocolVersion","bridgeMode","username","USERNAME_MASK","password","PASSWORD_MASK","will","WILL_FLAG_MASK","WILL_RETAIN_MASK","WILL_QOS_MASK","WILL_QOS_SHIFT","clean","CLEAN_SESSION_MASK","keepalive","_parseNum","properties","_parseProperties","Object","getOwnPropertyNames","clientId","willProperties","payload","_parseBuffer","sessionPresent","SESSIONPRESENT_MASK","reasonCode","returnCode","_parseMessageId","slice","nl","subscriptions","options","_parseByte","SUBSCRIBE_OPTIONS_QOS_MASK","SUBSCRIBE_OPTIONS_NL_SHIFT","SUBSCRIBE_OPTIONS_NL_MASK","rap","SUBSCRIBE_OPTIONS_RAP_SHIFT","SUBSCRIBE_OPTIONS_RAP_MASK","rh","SUBSCRIBE_OPTIONS_RH_SHIFT","SUBSCRIBE_OPTIONS_RH_MASK","subscription","push","granted","unsubscriptions","messageId","maybeBuffer","end","toString","_parseStringPair","name","readUInt16BE","_parse4ByteNum","readUInt32BE","fullInfoFlag","mul","current","padding","maxBytes","VARBYTEINT_MASK","VARBYTEINT_FIN_MASK","_parseByType","type","propertiesCodes","create","currentUserProperty","propertiesTypes","Array","isArray","currentValue","_newPacket","emit","err"]
}
