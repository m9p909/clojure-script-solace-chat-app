{
"version":3,
"file":"module$node_modules$mqtt$lib$connect$wx.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/mqtt/lib/connect/wx.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mqtt$lib$connect$wx\"] = function(global,require,module,exports) {\nvar Buffer = require('buffer').Buffer;\n'use strict'\r\n\r\nvar Transform = require('readable-stream').Transform\r\nvar duplexify = require('duplexify')\r\n\r\n/* global wx */\r\nvar socketTask\r\nvar proxy\r\nvar stream\r\n\r\nfunction buildProxy () {\r\n  var proxy = new Transform()\r\n  proxy._write = function (chunk, encoding, next) {\r\n    socketTask.send({\r\n      data: chunk.buffer,\r\n      success: function () {\r\n        next()\r\n      },\r\n      fail: function (errMsg) {\r\n        next(new Error(errMsg))\r\n      }\r\n    })\r\n  }\r\n  proxy._flush = function socketEnd (done) {\r\n    socketTask.close({\r\n      success: function () {\r\n        done()\r\n      }\r\n    })\r\n  }\r\n\r\n  return proxy\r\n}\r\n\r\nfunction setDefaultOpts (opts) {\r\n  if (!opts.hostname) {\r\n    opts.hostname = 'localhost'\r\n  }\r\n  if (!opts.path) {\r\n    opts.path = '/'\r\n  }\r\n\r\n  if (!opts.wsOptions) {\r\n    opts.wsOptions = {}\r\n  }\r\n}\r\n\r\nfunction buildUrl (opts, client) {\r\n  var protocol = opts.protocol === 'wxs' ? 'wss' : 'ws'\r\n  var url = protocol + '://' + opts.hostname + opts.path\r\n  if (opts.port && opts.port !== 80 && opts.port !== 443) {\r\n    url = protocol + '://' + opts.hostname + ':' + opts.port + opts.path\r\n  }\r\n  if (typeof (opts.transformWsUrl) === 'function') {\r\n    url = opts.transformWsUrl(url, opts, client)\r\n  }\r\n  return url\r\n}\r\n\r\nfunction bindEventHandler () {\r\n  socketTask.onOpen(function () {\r\n    stream.setReadable(proxy)\r\n    stream.setWritable(proxy)\r\n    stream.emit('connect')\r\n  })\r\n\r\n  socketTask.onMessage(function (res) {\r\n    var data = res.data\r\n\r\n    if (data instanceof ArrayBuffer) data = Buffer.from(data)\r\n    else data = Buffer.from(data, 'utf8')\r\n    proxy.push(data)\r\n  })\r\n\r\n  socketTask.onClose(function () {\r\n    stream.end()\r\n    stream.destroy()\r\n  })\r\n\r\n  socketTask.onError(function (res) {\r\n    stream.destroy(new Error(res.errMsg))\r\n  })\r\n}\r\n\r\nfunction buildStream (client, opts) {\r\n  opts.hostname = opts.hostname || opts.host\r\n\r\n  if (!opts.hostname) {\r\n    throw new Error('Could not determine host. Specify host manually.')\r\n  }\r\n\r\n  var websocketSubProtocol =\r\n    (opts.protocolId === 'MQIsdp') && (opts.protocolVersion === 3)\r\n      ? 'mqttv3.1'\r\n      : 'mqtt'\r\n\r\n  setDefaultOpts(opts)\r\n\r\n  var url = buildUrl(opts, client)\r\n  socketTask = wx.connectSocket({\r\n    url: url,\r\n    protocols: [websocketSubProtocol]\r\n  })\r\n\r\n  proxy = buildProxy()\r\n  stream = duplexify.obj()\r\n  stream._destroy = function (err, cb) {\r\n    socketTask.close({\r\n      success: function () {\r\n        cb && cb(err)\r\n      }\r\n    })\r\n  }\r\n\r\n  var destroyRef = stream.destroy\r\n  stream.destroy = function () {\r\n    stream.destroy = destroyRef\r\n\r\n    var self = this\r\n    setTimeout(function () {\r\n      socketTask.close({\r\n        fail: function () {\r\n          self._destroy(new Error())\r\n        }\r\n      })\r\n    }, 0)\r\n  }.bind(stream)\r\n\r\n  bindEventHandler()\r\n\r\n  return stream\r\n}\r\n\r\nmodule.exports = buildStream\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","buildProxy","proxy","Transform","_write","proxy._write","chunk","encoding","next","socketTask","send","data","buffer","success","fail","errMsg","Error","_flush","proxy._flush","done","close","setDefaultOpts","opts","hostname","path","wsOptions","buildUrl","client","protocol","url","port","transformWsUrl","bindEventHandler","onOpen","stream","setReadable","setWritable","emit","onMessage","res","ArrayBuffer","Buffer","from","push","onClose","end","destroy","onError","duplexify","buildStream","host","websocketSubProtocol","protocolId","protocolVersion","wx","connectSocket","protocols","obj","_destroy","stream._destroy","err","cb","destroyRef","self","setTimeout","bind"]
}
