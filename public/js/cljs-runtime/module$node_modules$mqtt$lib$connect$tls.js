shadow$provide.module$node_modules$mqtt$lib$connect$tls=function(global,require,module,exports){var tls=require("shadow$empty"),debug=require("module$node_modules$debug$src$browser")("mqttjs:tls");module.exports=function(mqttClient,opts){function handleTLSerrors(err){opts.rejectUnauthorized&&mqttClient.emit("error",err);connection.end()}opts.port=opts.port||8883;opts.host=opts.hostname||opts.host||"localhost";opts.servername=opts.host;opts.rejectUnauthorized=!1!==opts.rejectUnauthorized;delete opts.path;
debug("port %d host %s rejectUnauthorized %b",opts.port,opts.host,opts.rejectUnauthorized);var connection=tls.connect(opts);connection.on("secureConnect",function(){opts.rejectUnauthorized&&!connection.authorized?connection.emit("error",Error("TLS not authorized")):connection.removeListener("error",handleTLSerrors)});connection.on("error",handleTLSerrors);return connection}}
//# sourceMappingURL=module$node_modules$mqtt$lib$connect$tls.js.map
