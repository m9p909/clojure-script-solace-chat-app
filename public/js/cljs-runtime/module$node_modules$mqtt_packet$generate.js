shadow$provide.module$node_modules$mqtt_packet$generate=function(global,require,module,exports){var Buffer=require("module$node_modules$buffer$index").Buffer;const writeToStream=require("module$node_modules$mqtt_packet$writeToStream");global=require("module$node_modules$events$events");class Accumulator extends global{constructor(){super();this._array=Array(20);this._i=0}write(chunk){this._array[this._i++]=chunk;return!0}concat(){var length=0;const lengths=Array(this._array.length),list=this._array;
let pos=0,i;for(i=0;i<list.length&&void 0!==list[i];i++)lengths[i]="string"!==typeof list[i]?list[i].length:Buffer.byteLength(list[i]),length+=lengths[i];length=Buffer.allocUnsafe(length);for(i=0;i<list.length&&void 0!==list[i];i++)"string"!==typeof list[i]?list[i].copy(length,pos):length.write(list[i],pos),pos+=lengths[i];return length}}module.exports=function(packet,opts){const stream=new Accumulator;writeToStream(packet,stream,opts);return stream.concat()}}
//# sourceMappingURL=module$node_modules$mqtt_packet$generate.js.map
