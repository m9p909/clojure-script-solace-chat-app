{
"version":3,
"file":"module$node_modules$mqtt$lib$connect$index.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/mqtt/lib/connect/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$mqtt$lib$connect$index\"] = function(global,require,module,exports) {\nvar process = require('process');\n'use strict'\r\n\r\nvar MqttClient = require('../client')\r\nvar Store = require('../store')\r\nvar url = require('url')\r\nvar xtend = require('xtend')\r\nvar debug = require('debug')('mqttjs')\r\n\r\nvar protocols = {}\r\n\r\n// eslint-disable-next-line camelcase\r\nif ((typeof process !== 'undefined' && process.title !== 'browser') || typeof __webpack_require__ !== 'function') {\r\n  protocols.mqtt = require('./tcp')\r\n  protocols.tcp = require('./tcp')\r\n  protocols.ssl = require('./tls')\r\n  protocols.tls = require('./tls')\r\n  protocols.mqtts = require('./tls')\r\n} else {\r\n  protocols.wx = require('./wx')\r\n  protocols.wxs = require('./wx')\r\n\r\n  protocols.ali = require('./ali')\r\n  protocols.alis = require('./ali')\r\n}\r\n\r\nprotocols.ws = require('./ws')\r\nprotocols.wss = require('./ws')\r\n\r\n/**\r\n * Parse the auth attribute and merge username and password in the options object.\r\n *\r\n * @param {Object} [opts] option object\r\n */\r\nfunction parseAuthOptions (opts) {\r\n  var matches\r\n  if (opts.auth) {\r\n    matches = opts.auth.match(/^(.+):(.+)$/)\r\n    if (matches) {\r\n      opts.username = matches[1]\r\n      opts.password = matches[2]\r\n    } else {\r\n      opts.username = opts.auth\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * connect - connect to an MQTT broker.\r\n *\r\n * @param {String} [brokerUrl] - url of the broker, optional\r\n * @param {Object} opts - see MqttClient#constructor\r\n */\r\nfunction connect (brokerUrl, opts) {\r\n  debug('connecting to an MQTT broker...')\r\n  if ((typeof brokerUrl === 'object') && !opts) {\r\n    opts = brokerUrl\r\n    brokerUrl = null\r\n  }\r\n\r\n  opts = opts || {}\r\n\r\n  if (brokerUrl) {\r\n    var parsed = url.parse(brokerUrl, true)\r\n    if (parsed.port != null) {\r\n      parsed.port = Number(parsed.port)\r\n    }\r\n\r\n    opts = xtend(parsed, opts)\r\n\r\n    if (opts.protocol === null) {\r\n      throw new Error('Missing protocol')\r\n    }\r\n\r\n    opts.protocol = opts.protocol.replace(/:$/, '')\r\n  }\r\n\r\n  // merge in the auth options if supplied\r\n  parseAuthOptions(opts)\r\n\r\n  // support clientId passed in the query string of the url\r\n  if (opts.query && typeof opts.query.clientId === 'string') {\r\n    opts.clientId = opts.query.clientId\r\n  }\r\n\r\n  if (opts.cert && opts.key) {\r\n    if (opts.protocol) {\r\n      if (['mqtts', 'wss', 'wxs', 'alis'].indexOf(opts.protocol) === -1) {\r\n        switch (opts.protocol) {\r\n          case 'mqtt':\r\n            opts.protocol = 'mqtts'\r\n            break\r\n          case 'ws':\r\n            opts.protocol = 'wss'\r\n            break\r\n          case 'wx':\r\n            opts.protocol = 'wxs'\r\n            break\r\n          case 'ali':\r\n            opts.protocol = 'alis'\r\n            break\r\n          default:\r\n            throw new Error('Unknown protocol for secure connection: \"' + opts.protocol + '\"!')\r\n        }\r\n      }\r\n    } else {\r\n      // A cert and key was provided, however no protocol was specified, so we will throw an error.\r\n      throw new Error('Missing secure protocol key')\r\n    }\r\n  }\r\n\r\n  if (!protocols[opts.protocol]) {\r\n    var isSecure = ['mqtts', 'wss'].indexOf(opts.protocol) !== -1\r\n    opts.protocol = [\r\n      'mqtt',\r\n      'mqtts',\r\n      'ws',\r\n      'wss',\r\n      'wx',\r\n      'wxs',\r\n      'ali',\r\n      'alis'\r\n    ].filter(function (key, index) {\r\n      if (isSecure && index % 2 === 0) {\r\n        // Skip insecure protocols when requesting a secure one.\r\n        return false\r\n      }\r\n      return (typeof protocols[key] === 'function')\r\n    })[0]\r\n  }\r\n\r\n  if (opts.clean === false && !opts.clientId) {\r\n    throw new Error('Missing clientId for unclean clients')\r\n  }\r\n\r\n  if (opts.protocol) {\r\n    opts.defaultProtocol = opts.protocol\r\n  }\r\n\r\n  function wrapper (client) {\r\n    if (opts.servers) {\r\n      if (!client._reconnectCount || client._reconnectCount === opts.servers.length) {\r\n        client._reconnectCount = 0\r\n      }\r\n\r\n      opts.host = opts.servers[client._reconnectCount].host\r\n      opts.port = opts.servers[client._reconnectCount].port\r\n      opts.protocol = (!opts.servers[client._reconnectCount].protocol ? opts.defaultProtocol : opts.servers[client._reconnectCount].protocol)\r\n      opts.hostname = opts.host\r\n\r\n      client._reconnectCount++\r\n    }\r\n\r\n    debug('calling streambuilder for', opts.protocol)\r\n    return protocols[opts.protocol](client, opts)\r\n  }\r\n  var client = new MqttClient(wrapper, opts)\r\n  client.on('error', function () { /* Automatically set up client error handling */ })\r\n  return client\r\n}\r\n\r\nmodule.exports = connect\r\nmodule.exports.connect = connect\r\nmodule.exports.MqttClient = MqttClient\r\nmodule.exports.Store = Store\r\n\n};"],
"names":["shadow$provide","global","require","module","exports","parseAuthOptions","opts","matches","auth","match","username","password","connect","brokerUrl","debug","parsed","url","parse","port","Number","xtend","protocol","Error","replace","query","clientId","cert","key","indexOf","protocols","isSecure","filter","index","clean","defaultProtocol","client","MqttClient","wrapper","servers","_reconnectCount","length","host","hostname","on","process","Store","title","__webpack_require__","mqtt","tcp","ssl","tls","mqtts","wx","wxs","ali","alis","ws","wss"]
}
